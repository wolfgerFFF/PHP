@import "vars", "clear";

/* <!-- <editor-folder Mixins> --> */
@mixin flex($direction: row, $justify: stretch, $align: stretch, $gap: 0px) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: wrap;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

@mixin flexRow($justify: stretch, $align: stretch, $gap: 0px) {
  @include flex(row, $justify, $align, $gap);
}

@mixin flexColumn($justify: stretch, $align: stretch, $gap: 0px) {
  @include flex(column, $align, $justify, $gap);
}

/* <!-- </editor-folder--> */

/* <!-- <editor-folder Main> --> */
* {
  max-width: 100%;
}

body {
  display: grid;
  grid-auto-rows: max-content auto max-content;
  justify-content: stretch;
  align-content: stretch;
  background: $white;
  min-height: 100vh;
  max-width: 100%;
  font-family: sans-serif;
  font-size: 14px;
}

header, footer {
  padding: 10px calc($base-padding + $min-padding);
  background: $white-dark;
  color: $dark;
  cursor: default;
}

header {
  @include flexColumn(start, center, 10px);
}

main {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: minmax(min-content, $sidebar-width) minmax(auto, $content-width);
  justify-content: stretch;
  align-content: stretch;
  padding: 0 $content-padding;

  nav {
    @include flexColumn(end, start, 5px);
    padding: 10px 0;
    margin-bottom: auto;
    min-height: 300px;
    background: linear-gradient(
                    0deg,
                    rgba(0, 0, 0, 0) 0,
                    $white-dark 100%
    );

    a {
      @include flexRow(end, center, 10px);
      padding: 5px 20px;
      color: $blue;

      &.current {
        color: $dark;
        text-decoration: underline 1px solid $dark;
        background: linear-gradient(
                        90deg,
                        rgba(0, 0, 0, 0) 0,
                        $white 100%
        );
      }
    }
  }

  #content {
    display: block;
    padding: 15px $min-padding;
  }

  &.error {
    justify-content: center;
    align-content: center;
    padding: 0 max($min-padding, calc((100vw - 600px) / 2));

    & > * {
      grid-column: span 2;
      @include flexColumn(stretch, stretch);
      border: 2px solid $orange;
      border-radius: $radius;
      padding: 10px 20px;
      gap: 10px;

      .title {
        font-size: 24px;
        font-weight: 600;
        color: $orange;
      }

      .message {
        font-size: 20px;
        color: $gray;
        min-height: 80px;
      }

      .link {
        margin-left: auto;
        font-size: 16px;
        color: $orange;
        text-decoration: underline;
      }
    }
  }
}

footer {
  @include flexRow(end, center, 10px);
}
/* <!-- </editor-folder--> */

body * {
  //border: 1px solid $blue;
}

/* <!-- <editor-folder Elements> --> */
/*
.counter {
  @include flexRow(space-between, center, 5px);
  justify-self: end;
  padding: 5px 10px;
  min-width: 114px;
  border: 1px solid $blue;
  color: $blue;
  font-size: 11px;

  &:empty {
    visibility: hidden;
  }

  &:before {
    @include flexRow(center, center);
    text-transform: lowercase;
    font-size: 9px;
    content: 'Просмотров:';
  }
}

.info {
  display: grid;
  grid-template-columns: auto repeat(2, max-content);

  .cell {
    display: flex;
    align-items: start;
    padding: 5px 10px;

    &.warning {
      color: $red;
      font-weight: 600;
    }

    &.url {
      justify-content: start;
    }

    &.code {
      justify-content: center;
    }

    &.views {
      justify-content: right;
    }

    &:is(:nth-child(1), :nth-child(2), :nth-child(3)) {
      justify-content: center;
      font-style: italic;
      background: $blue;
      color: $white;
    }

    &:is(:nth-child(6n + 7), :nth-child(6n + 8), :nth-child(6n + 9)) {
      background: $white-dark;
    }
  }
}
*/
/* <!-- </editor-folder--> */
