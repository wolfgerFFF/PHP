@import "clear";

/* <!-- <editor-folder Main> --> */
$error-color: $red-dark;
$site-front: $blue;
$site-front-text: $white;
$site-back: $white;
$site-back-text: $dark;

* {
  max-width: 100%;
}

body {
  display: grid;
  grid-auto-rows: max-content auto max-content;
  justify-content: stretch;
  align-content: stretch;
  background: $site-back;
  color: $site-back-text;
  min-height: 100vh;
  max-width: 100%;
  font-family: sans-serif;
  font-size: 14px;
}

header, footer {
  @include flexRow(start, center, 10px);
  padding: 10px calc($base-padding + $min-padding);
  box-shadow: rgba(0, 0, 0, .2) 0 0 5px -1px;
  text-shadow: rgba(0, 0, 0, .2) 2px 2px 5px;
  background: $site-front;
  color: $site-front-text;
  cursor: default;
  z-index: 1;
}

header {
  a {
    color: inherit;
    text-decoration: none;
    font-size: 20px;
    font-weight: bold;

    &:is(:hover, :focus) {
      color: inherit;
      text-decoration: none;
    }
  }
}

main {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: minmax(min-content, $sidebar-width) minmax(auto, $content-width);
  justify-content: stretch;
  align-content: stretch;
  padding: 0 $content-padding;

  #menu {
    @include flexColumn(end, start, 5px);
    position: relative;
    padding: 10px 0;
    margin-bottom: auto;
    background: $site-front;
    color: $site-front-text;
    text-shadow: rgba(0, 0, 0, .2) 2px 2px 5px;

    &:before {
      background: linear-gradient(-2deg, transparent 12px, rgba(0, 0, 0, 0) 0, $site-front 14px);
      position: absolute;
      width: 100%;
      height: 20px;
      bottom: -20px;
      content: '';
      z-index: -1;
    }

    a {
      @include flexRow(end, center, 10px);
      position: relative;
      max-width: calc(100% - 10px);
      padding: 5px 20px;
      text-decoration: none;
      color: inherit;

      &.current {
        background: $site-back;
        color: $site-back-text;

        &:before {
          background: linear-gradient(80deg, transparent 8px, rgba(0, 0, 0, 0) 0, $site-back 10px);
          position: absolute;
          width: 10px;
          height: 100%;
          top: 0;
          left: -10px;
          content: '';
        }
      }
    }
  }

  #content {
    display: block;
    padding: 15px $min-padding;
  }

  #error {
    grid-column: 1/3;
    @include flexColumn(center, center);
    text-shadow: rgba(0, 0, 0, .2) 2px 2px 5px;

    & > * {
      padding: 5px 20px;
      max-width: 600px;
      width: 100%;
    }

    .title {
      border-radius: 5px 5px 0 0;
      background: $error-color;
      box-shadow: $error-color 0 -1px 10px -2px;
      color: $white;
      font-size: 24px;
      font-weight: bold;
    }

    .message {
      border-radius: 0 0 5px 5px;
      box-shadow: $error-color 0 1px 10px -4px;
      color: $site-back-text;
      font-size: 18px;
      min-height: 80px;
    }

    .links {
      @include flexColumn(end, center);
      padding: 10px;

      a {
        @include flexRow(center, center, 5px);
        font-size: 10px;
        font-weight: bold;
        text-decoration: none;
        text-transform: uppercase;

        &:after {
          font-size: 16px;
          content: "○";
        }

        &:is(:hover, :focus) {
          &:after {
            content: "●";
          }
        }
      }
    }
  }
}

.hide {
  display: none !important;
}

.popup {
  position: absolute;
  @include flexColumn(center, center, 2px);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 999;

  .close {
    @include flexRow(center, center);
    background: $red-dark;
    border: 1px solid $red-dark;
    color: $white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    overflow: hidden;
    transform: rotate(45deg);
    margin: -32px -18px 0 0;
    cursor: pointer;

    &:before {
      position: absolute;
      content: '+';
      font-size: 40px;
    }
  }

  &:before {
    background: $dark-dark;
    opacity: 0.6;
    position: fixed;
    width: 100%;
    height: 100%;
    content: '';
    z-index: -1;
  }

  & > *:not(.close) {
    @include flexColumn(stretch, stretch, 10px);
    background: $white !important;
    padding: 20px !important;
    border-radius: 3px !important;
  }
}
/* <!-- </editor-folder--> */

/* <!-- <editor-folder Users> --> */
.users {
  &-form {
    @include flexColumn(start, center, 10px);
    margin: 20px 0;
    padding: 10px;
    width: 100%;
    max-width: 450px;
    border: 1px solid $white-dark;
    border-radius: 3px;

    .title {
      font-weight: bold;
    }

    label {
      opacity: 0.8;
      text-transform: uppercase;
      cursor: default;
    }

    .error-message {
      @include flexRow(center, center);
      flex-wrap: wrap;
      color: $red;
    }

    & > * {
      @include flexRow(space-between, center, 10px);
      width: 100%;

      & > * {
        @include flexRow(end, center, 10px);
        text-transform: none !important;
      }
    }

    button {
      @include flexRow(center, center, 10px);
    }
  }

  &-list {
    $list-columns: 6;

    display: grid;
    grid-template-columns: repeat($list-columns, auto);
    max-width: 100%;

    & > * {
      @include flexRow(center, center);
      padding: 5px 10px;

      @for $i from $list-columns through ($list-columns * 2 - 1) {
        &:nth-child(#{$list-columns * 2}n - #{$i}) {
          background: $white-dark;
        }
      }

      @for $i from 1 through $list-columns {
        &:nth-child(#{$i}) {
          justify-content: center;
          background: $blue;
          color: $white;
          font-weight: bold;
          text-transform: uppercase;
          min-height: 36px;

          & > a {
            @include flexRow(center, center);
            padding: 5px 20px;
            text-transform: none;
            color: $white;
            border-radius: 3px;
            box-shadow: $white 0 0 5px -1px;
            text-shadow: rgba(0, 0, 0, .2) 2px 2px 1px;
            &:is(:hover,:focus){
              background: rgba(0,0,0,.1);
            }
          }
        }
      }
    }

    & > :nth-child(#{$list-columns}n - #{$list-columns - 1}) {
      border-radius: 3px 0 0 3px;
    }

    & > :nth-child(#{$list-columns}n) {
      border-radius: 0 3px 3px 0;
    }

    .control {
      gap: 10px;

      .update {
        color: $green-dark;
        cursor: pointer;
      }

      .remove {
        color: $red-dark;
        cursor: pointer;
      }
    }
  }
}
/* <!-- </editor-folder--> */

body * {
  //border: 1px solid $blue;
}
